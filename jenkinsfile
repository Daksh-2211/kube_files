pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node23'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        DEPENDENCY_CHECK_DB = '/var/lib/jenkins/odc-db'
    }
    stages {
        stage('clean workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Vansh-Umraliya/swiggy.git'
            }
        }
        stage("Sonarqube Analysis") {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Swiggy \
                    -Dsonar.projectKey=Swiggy
                    '''
                }
            }
        }
        stage("Quality Gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: "--scan ./package.json --disableYarnAudit --disableNodeAudit --data $DEPENDENCY_CHECK_DB --disableRetireJS --disableNodeJS --disableCentral --disableOSSIndex", odcInstallation: 'DP-Check'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-creds', toolName: 'docker') {   
                        sh "docker build -t swiggy ."
                        sh "docker tag swiggy dakshbhavsar/swiggy:latest"
                        sh "docker push dakshbhavsar/swiggy:latest"
                    }
                }
            }
        }
        stage("TRIVY Image Scan") {
            steps {
                sh "trivy image kastrov/swiggy:latest > trivy.txt"
            }
        }
        stage('Deploy to Container') {
            steps {
                sh 'docker run -d --name swiggy -p 3000:3000 kastrov/swiggy:latest'
            }
        }
    }
}
